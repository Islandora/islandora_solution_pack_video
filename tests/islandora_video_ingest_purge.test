<?php

/**
 * @file
 * Attempts to ingest a video file into a randomly generated video collection.
 */

class IslandoraVideoIngestTestCase extends IslandoraCollectionWebTestCase {

  /**
   * Get test information.
   *
   * @see IslandoraWebTestCase::getInfo()
   */
  public static function getInfo() {
    return array(
      'name' => 'Video Ingest/Purge',
      'description' => 'Ingests and purges a video file from a randomly generated video collection',
      'group' => 'Islandora Video',
    );
  }

  /**
   * Set up the test environment.
   *
   * @see IslandoraWebTestCase::setUp()
   */
  public function setUp() {
    parent::setUp(array(
      'islandora',
      'islandora_video',
      'islandora_basic_collection',
    ));
  }

  /**
   * Creates an administrative user and attempts to ingest a video file.
   */
  public function testIngestPurgeVideo() {

    $user = $this->drupalCreateUser(array_keys(module_invoke_all('permission')));
    $this->drupalLogin($user);

    $label = $this->randomName(16);
    $suffix = $this->randomName(16);
    $collectionpid = 'islandora:' . $suffix;
    $this->createTestCollection($label, 'islandora:sp_videoCModel', $collectionpid);

    // Ensures derivative creation is turned off.
    $edit = array(
      'islandora_video_retain_original' => FALSE,
      'islandora_video_make_archive' => FALSE,
      'islandora_video_make_mp4_locally' => FALSE,
      'islandora_video_make_ogg_locally' => FALSE,
      'islandora_video_make_thumbnail_locally' => FALSE,
    );
    $this->drupalPost('admin/islandora/video', $edit, 'Save configuration');

    // Attempts to create an object.
    $path = 'islandora/object/' . $collectionpid . '/manage/overview/ingest';
    $file = drupal_get_path('module', 'islandora_video') . '/tests/fixtures/test.avi';
    $edit = array('files[file]' => $file);
    $this->drupalPost($path, $edit, 'Ingest');
    $this->assertText('New Object', 'Video object was created', 'Islandora');

    // Determines whether or not the appropriate datastreams were created.
    $object = $this->getObjectFromPath($this->url);
    $datastreams = array(
      'RELS-EXT',
      'DC',
      'OBJ',
    );
    $this->assertDatastreams($object, $datastreams);

    // Attempts to delete the object and then collection.
    $this->deleteObject($object->id);
    $this->deleteTestCollection($collectionpid);
  }
}
